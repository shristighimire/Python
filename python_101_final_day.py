# -*- coding: utf-8 -*-
"""Python 101- final day

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tVt5Dk-AKun8EoLRZr8iFNbPLsWWlTrd
"""

#1.) Here is a collection: word_collection = {word:"happy"; definition:'joyful'; grammar_type:"adjective"} What would you code to print the values of the dictionary?
word_collection = {'word':"happy", 'definition':'joyful', 'grammar_type':"adjective"}
for key, value1 in word_collection.items():
  if type(value1) == list:    #if we dont use if statement and while in next line, it will not go throung every value
    while value1:
      myvalue = value1.pop(0)
      print (f' {myvalue.title()}')
  else:
    print (f' {value1.title()}')

#2.) 1. Add code to write a message that uses all of the attributes in the function.
#    2. Create an instance of 2 friends
class Friends:
  """A simple attempt to model a friend."""
  def __init__(self,name,age,hobby):
    """Initialize friend attributes."""
    self.name = name
    self.age = age
    self.hobby = hobby

friends1 = []
for _ in range(1):
  my_friend = Friends('Ankita', '20', 'writing poems')
  friends1.append(my_friend)
print(friends1[0].name,'is', friends1[0].age,', she loves', friends1[0].hobby,'.')

friends2 = []
for _ in range(1):
  my_friend = Friends('Tim', '19', 'playing soccer')
  friends2.append(my_friend)
print(friends2[0].name,'is', friends2[0].age,', he loves', friends2[0].hobby,'.')

#3.) For your class of Friends in the question above do the following
#1.Code a child class for Musicians with a parameter for their favorite instrument
#2. Write and print a msg with the name, age, and instrument
#3. Create an instance
class Musicians(Friends):
  """A simple model of a Musician friend."""
  def __init__(self, make, model, color):
    """Initialize the musicians friends."""
    super().__init__(name,age,hobby)

  def instrument(self):
    """Their favourite instrument."""
    self.instrument = "violin"

class Musicians(Friends):
    """A simple model of a Musician friend."""
    def __init__(self, name, age, hobby, instrument):
        """Initialize the musician friend."""
        super().__init__(name, age, hobby)
        self.instrument = instrument
    def display_info(self):
        """Display information about the musician friend."""
        print(f"{self.name} is {self.age} years old. They love {self.hobby} and play the {self.instrument}.")

friends3 = []
for _ in range(1):
  my_friend = Musicians('Ankita', '20', 'music','voilin')
  friends3.append(my_friend)
print(friends3[0].name,'is', friends3[0].age,'and loves playing',friends3[0].instrument,'.')

musician_friend = Musicians('Aahana', '20', 'music','voilin')

#5.  Fix this code as it is a mess and put the colab in this space.You should be able to figure out the purpose of the code from the code 2.  What is the code doing.  Be specific for each line.
password = 'python'

while True:
    x = input("How many credits do you have?")
    x=int(x)
    if x < 28:
        print(f"You are not a sophomore since you have {x} credits.")
    elif x > 28:
        print(f"You are a sophomore with {x} credits.")
    else:
        print("You have exactly 28 credits. Stopping the loop.")

    more_people = input("Are there any more students in line? (yes/no): ")

    if more_people.lower() == "no":
        break
    elif more_people.lower() == "yes":
        continue
    else:
        print("Invalid input. Please enter 'yes' or 'no'.")

#Run it 4 times
#1. less than 28 credits
#2. more than 28 credits
#3 28 exactly
#4 stop the while loop