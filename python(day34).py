# -*- coding: utf-8 -*-
"""Python(day34).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1M5n9CuWetzWgPEXa_BnD7LHa0Jo2IJbm

7-1: Restaurant Seating I
Write a program that asks a customer how many people are in their dinner group.
If the answer is more than 6, print a message saying they’ll have to wait for a
table. Otherwise, report that their table is ready.
"""

question = "How many people are in your dinner group? "
answer=True
while answer:
  msg = input(question)
  num=int(msg)
  if num >= 7:
    print("Please wait for your table!")
    answer=False
  else:
    print("Your table is ready!")
    answer=False

"""7-2: Restaurant Seating II
The restaurant is very busy. Seating depends upon many people are in their
dinner group. If 1 or 2, there is no wait; if 3 or 4 people, the wait is 5 minutes; if 5 or 6 people, the wait is 10 minutes, and if more than 6, the wait is 15 minutes.
Write a program in which you ask a customer how many people are in their
dinner group, and then tell them how long the wait is.

"""

question = "How many people are in your dinner group? "
answer=True
while answer:
  msg = input(question)
  num=int(msg)
  if num <=2:
    print("There is no wait")
    answer=False
  elif num<=4:
    print("The wait is 5 minutes.")
    answer=False
  elif num<=6:
    print("The wait is 10 minutes.")
    answer=False
  else:
    print("The wait is 15 minutes.")
    answer=False

"""7-3: Restaurant Seating III
Write a while loop which asks a line of customers how many people are in their
dinner group, and then tell them how long their wait is. Write three versions of
the program that exit the while loop in three different ways:
(a) Ask if there are any more customers in line. Use a conditional statement in
the while statement to stop the loop when the answer is “no”.
(b) Use an active variable to control how long the loop runs.
(c) Use break statement to exit the loop when the customer says "no".

"""

question = "How many people are in your dinner group? "
answer=True
while answer:
  msg = input(question)
  num=int(msg)
  if num <=2:
    print("There is no wait")

  elif num<=4:
    print("The wait is 5 minutes.")

  elif num<=6:
    print("The wait is 10 minutes.")

  else:
    print("The wait is 15 minutes.")

  more_people = input("Are there any more customers in line? (yes/no): ")
  if more_people.lower() == "no":
        answer = False

password = 'python'

while True:
    x = int(input("How many credits do you have? "))

    if x < 28:
        print(f"You are not a sophomore since you have {x} credits.")
        break
    elif x > 28:
        print(f"You are a sophomore with {x} credits.")
        break
    else:
        print("You have exactly 28 credits. Stopping the loop.")
        break
more_people = input("Are there any more students in line? (yes/no): ")
if more_people.lower() == "no":
        answer = False

# Colab snippet
while True:
    x = int(input("How many credits do you have? "))

    if x < 28:
        print(f"You are not a sophomore since you have {x} credits.")
        break
    elif x > 28:
        print(f"You are a sophomore with {x} credits.")
        break
    else:
        print("You have exactly 28 credits. Stopping the loop.")
        break



question = "How many people are in your dinner group? "
while True:
    msg = input(question)
    num = int(msg)
    if num <= 2:
        print("There is no wait")
    elif num <= 4:
        print("The wait is 5 minutes.")
    elif num <= 6:
        print("The wait is 10 minutes.")
    else:
        print("The wait is 15 minutes.")

    more_people = input("Are there any more customers in line? (yes/no): ")
    if more_people.lower() == "no":
        break

password = 'python'

while True:
    x = int(input("How many credits do you have? "))

    if x < 28:
        print(f"You are not a sophomore since you have {x} credits.")
        break
    elif x > 28:
        print(f"You are a sophomore with {x} credits.")
        break
    else:
        print("You have exactly 28 credits. Stopping the loop.")
        break
more_people = input("Are there any more students in line? (yes/no): ")
if more_people.lower() == "no":
        answer = False
elif more_people.lower() == "yes":
  continue
else:
    print("Invalid input. Please enter 'yes' or 'no'.")

"""7-4: Sandwiches
Make a list called “sandwiches” and fill it with the names of five different
sandwiches. Then make an empty list called “finished”. Use a while loop to loop
through the list of sandwich orders and print a message for each order, such as “I
making a tuna sandwich.” As each sandwich is made, move it to the “finished”
list. After all the sandwiches have been made, print out the list of “sandwiches”
(which should be empty) and the list of “finished” sandwiches.

"""

sandwiches = ["cucumber", "strawberry and cream cheese", "ham", "vegetarian", "chicken"]
finished = []
while sandwiches:
    current_order = sandwiches.pop(0)
    print(f"I'm making a {current_order} sandwich.")
    finished.append(current_order)

print("sandwiches:", sandwiches)
print("finished:", finished)

"""7-5: No Pastrami
Make a list called “sandwiches” and fill it with the names of eight sandwiches,
with the sandwich 'pastrami' appearing in the list three times. Add code near the
beginning of your program to print a message saying “the deli has run out of
pastrami”, and then use a while loop to remove all occurrences of 'pastrami' from
the “sandwiches” list. Then run the program moving “sandwiches” to “finished”.
Make sure no pastrami sandwiches end up in the “finished” list.

"""

sandwiches = ["cucumber", "pastrami","strawberry and cream cheese", "pastrami","ham", "vegetarian","pastrami", "chicken"]
finished = []
print("The deli has run out of pastrami.")
while 'pastrami' in sandwiches:
    sandwiches.remove('pastrami')
while sandwiches:
    current_order = sandwiches.pop(0)
    print(f"I'm making a {current_order} sandwich.")
    finished.append(current_order)
print("Sandwiches:", sandwiches)
print("Finished:", finished)

"""7-6: Sandwich Orders
Write a program that asks customers their name and their order. Write a prompt
similar to “which sandwich would you like”. Keep track of the names and orders
in a dictionary called “orders”. Include a block of code that ends the poll when
everyone has been asked to order a sandwich. Print the results of the poll in the
form “John wants a tuna sandwich,” etc.

"""

orders = {}
while True:
    name = input("What's your name? (Enter 'done' to end the poll): ")
    if name.lower() == 'done':
        break
    order = input(f"Hello, {name}! Which sandwich would you like? ")
    orders[name] = order
print("Order results:")
for name, order in orders.items():
    print(f"{name} wants a {order} sandwich.")

"""Extra Credit (1 point):
Then make an empty dictionary called finished_sandwiches. Loop through the
dictionary of sandwich orders and print a message for each order, such as "Pete,I
made your tuna sandwich." As each sandwich is made, move it to the dictionary
of finished_sandwiches and remove it from the orders dictionary. After all the
sandwiches have been made, print the two dictionaries to show that all
sandwiches have been made.

"""

orders = {}
finished_sandwiches = {}
while True:
    name = input("What's your name? (Enter 'done' to end the poll and process your order): ")
    if name.lower() == 'done':
        break
    order = input(f"Hello, {name}! Which sandwich would you like? ")
    orders[name] = order

for name, order in orders.items():
    print(f"{name}, I made your {order} sandwich.")
    finished_sandwiches[name] = order
for name in list(finished_sandwiches.keys()):
    del orders[name]
print("Order results:")
for name, order in orders.items():
    print(f"{name.title()} wants a {order} sandwich.")
print("Finished sandwiches:", finished_sandwiches)
for name, order in finished_sandwiches.items():
    print(f"{name.title()}, I made your {order} sandwich.")

"""Extra Credit (2 pts):
Create two dictionaries with names and ages. One dictionary has 3 women: Sue is
20, Ann is 29, and Liz is 34. The other dictionary has 3 men: Bob is 28, Abdul is 32,
and Ramon is 22. Write a program that merges the two dictionaries in a third
dictionary so that their ages are arranged numerically, that is, so that Sue is the
first key, Ramon is the second, and so on.

"""

women = {'Sue': 20, 'Ann': 29, 'Liz': 34}
men = {'Bob': 28, 'Abdul': 32, 'Ramon': 22}
all_people = {}
for d in [women, men]:
    for name, age in d.items():
        all_people[name] = age
sorted_items = sorted(all_people.items())
sorted_people = {}
for name, age in sorted_items:
    sorted_people[name] = age
for name, age in sorted_people.items():
    print(f"{name} is {age} years old.")