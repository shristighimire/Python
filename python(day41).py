# -*- coding: utf-8 -*-
"""Python(day41).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XwOvkFKDhIKu88XSs6Jdf04aHYRjGHl9

8-1: Star
(a) Using ColabTurtle, use a for loop to draw a star with your turtle.
(b) Create a star() function with draws a star when called.
(c) Add a parameter to the star() function which controls the size of the star
"""

!pip install ColabTurtle
from ColabTurtle.Turtle import *

#(a)Using ColabTurtle, use a for loop to draw a star with your turtle
def star():
  '''draw a star with a sidelength'''

initializeTurtle()
for i in range(5):
  sidelength = 100
  angle = 144
  forward(sidelength)
  right(angle)

#(b)Create a star() function with draws a star when called
initializeTurtle()

def star():
    for i in range(5):
      sidelength=100
      angle=144
      forward(sidelength)
      right(angle)

star()

#(c) Add a parameter to the star() function which controls the size of the star


initializeTurtle()

def star(size):
    for i in range(5):
        forward(size)
        right(144)

star(100)

"""8-2: Shirt
Write a function called shirt() that accepts one parameter, size. The function should print a
message, such as "Thank you for ordering a large shirt." Call the function, making sure to
include a size as an argument in the function call
"""

def shirt(size):

    print(f"Thank you for ordering a {size} shirt.")

shirt("large")

"""8-3: T-Shirt
Write a function called t_shirt() that accepts a size and the text of a message that should be
printed on the t-shirt. The function should print a sentence summarizing the size of the shirt
and the message printed on it.
Call the function twice, once using positional arguments to make a shirt and a second time
using keyword arguments.
"""

def t_shirt(size, message):
    print(f"You ordered a {size} shirt with the message: {message}")
t_shirt("medium", "I love Python")
t_shirt(size="large", message="Hello, world!")

"""8-4: Medium T-Shirts
Modify the t_shirt() function so that shirts are medium by default with a default message that
reads "Hello World." Call the function three times, once with the default size and text, once for
a large shirt with the default message, and once for a shirt of any size with a different message.
"""

def t_shirt(size="medium", newmessage="Hello World!"):
    print(f"You ordered a {size} shirt with the message: {newmessage}")
t_shirt()
t_shirt("large")
t_shirt("small", "Custom message")

"""8-5: Record Album
Write a function called album() that builds a dictionary describing a music album. The function
should take in an artist name and an album title, and it should return a dictionary containing
these two pieces of information. Use the function to make three dictionaries representing
different albums. Print each return value to show that the dictionaries are storing the album
information correctly
"""

def album(artist, title):
    return {"Artist": artist, "Title": title}
album1 = album("Artist1", "Album Title 1")
album2 = album("Artist2", "Album Title 2")
album3 = album("Artist3", "Album Title 3")
print(album1)
print(album2)
print(album3)

"""8-6: Record Albums with User Input
Starting with your program from Exercise 8-5 above, write a while loop that allows a user to
input an album’s artist and title and build a dictionary. Then call album() and allow the user to
add at least three albums to the dictionary. Then print the dictionary that’s created. Be sure to
include a quit value in the while loop!

"""

def album(artist, title):
    return {"Artist": artist, "Title": title}

albums = []

while True:
    artist = input("Enter the artist (or enter 'quit' to exit): ")
    if artist.lower() == 'quit':
        break
    title = input("Enter the album title: ")
    albums.append(album(artist, title))

for album_info in albums:
    print(album_info)

"""8-7: Message:
Make a list called friends that contains several of your friends. Create a function called
message() which prints a message (such as “Hello there, Jim, how are you today?”) to each
friend. Now pass the list of friends to the function
"""

def message(friends):
    for friend in friends:
        print(f"Hello there, {friend}, how are you today?")
friends = ["Ankita", "Shristi", "Shweta"]
message(friends)

"""8-8: Sending Messages:
Write a function called send_messages() that prints a text message to each friend and moves
each friend from the friends list to a new list called sent_messages as it’s printed. After calling
the function, print both of your lists to make sure the friends were moved correctly from
friends to sent_messages.
"""

def send_messages(friends, sent_messages):
    for friend in friends:
        message = f"Hello there, {friend}, how are you today?"
        print(message)
        sent_messages.append(friend)
    friends.clear()
friends = ["Ankita", "Shristi", "Shweta"]
sent_messages = []
send_messages(friends, sent_messages)
print("Friends:", friends)
print("Sent Messages:", sent_messages)

"""8-9: Archived Messages:
Start with your work from Exercise 8-8. Call the function send_messages() with a copy of the
list of friends. After calling the function, print both of your lists to show that the original list of
friends has not changed.

"""

def send_messages(friends, sent_messages):
    for friend in friends[:]:
        message = f"Hello there, {friend}, how are you today?"
        print(message)
        sent_messages.append(friend)
        friends.remove(friend)
friends = ["Ankita", "Shristi", "Shweta"]
sent_messages = []
send_messages(friends, sent_messages)
print("Friends:", friends)
print("Sent Messages:", sent_messages)