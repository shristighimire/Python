# -*- coding: utf-8 -*-
"""Python(Day47)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1D_qA3hPONCZxArdQ4QWo985jv34KwTx8

9-1: Restaurant
Make a class called Restaurant. The init() method for Restaurant should have two parameters:
a restaurant name and cuisine type. Make a method called describe() that prints the two
pieces of information, and a method called open() that prints a message indicating that the
restaurant is open.
Make an instance called my_favorite_restaurant from your class. Print the two attributes
individually, and then call both methods.
"""

class Restaurant:
    def __init__(self, restaurant_name, cuisine):
        self.restaurant_name = restaurant_name
        self.cuisine = cuisine

    def describe(self):
        print(f"Restaurant Name: {self.restaurant_name}")
        print(f"Cuisine: {self.cuisine}")

    def open(self):
        print(f"{self.restaurant_name} is now open!")

my_favorite_restaurant = Restaurant("Masala Cuisine", "Nepali")
print(my_favorite_restaurant.restaurant_name)
print(my_favorite_restaurant.cuisine)
my_favorite_restaurant.describe()
my_favorite_restaurant.open()

"""
9-2: Three Restaurants
Start with your class from Exercise 9-1. Create three instances from the class, and call describe()
for each instance.
"""

restaurant1 = Restaurant("IHop", "American")
restaurant2 = Restaurant("Indochen", "Indian")
restaurant3 = Restaurant("Mia's Kitchen", "Italian")
restaurant1.describe()
restaurant2.describe()
restaurant3.describe()

"""9-3: Users
Make a class called User. Add two parameters called first_name and last_name, and then add
three other parameters that are typically stored in a user profile, for example, age. Make a
method called summary() that prints a summary of the userâ€™s information. Make another
method called greeting() that prints a personalized greeting to the user.
Create two instances representing different users, and call both methods for each user.

"""

class User:
    def __init__(self, first_name, last_name, age, email, city):
        self.first_name = first_name
        self.last_name = last_name
        self.age = age
        self.email = email
        self.city = city

    def summary(self):
        print(f"Name: {self.first_name} {self.last_name}")
        print(f"Age: {self.age}")
        print(f"Email: {self.email}")
        print(f"City: {self.city}")

    def greeting(self):
        print(f"Hello, {self.first_name}! Welcome back.")

user1 = User("Shristi", "Ghimire", 20, "s0g81730@marymount.edu", "Arlington")
user2 = User("Anna", "Smith", 19, "a0s71896@marymount.edu", "Alexandria")
user1.summary()
user1.greeting()
user2.summary()
user2.greeting()

"""9-4: User Input
Start with your class from Exercise 9-3. Create a program that asks a user to provide the five
parameters required for the class User. Run the program and create an instance of User from
the user's input. Then call the two methods.
"""

first_name = input("Enter your first name: ")
last_name = input("Enter your last name: ")
age = int(input("Enter your age: "))
email = input("Enter your email: ")
city = input("Enter your city: ")

user3 = User(first_name, last_name, age, email, city)
user3.summary()
user3.greeting()

"""9-5: Meals
Create a class for Meal. Have at least three parameters, with one for a food item, another for a
drink, and a third for a desert. Include a print statement that automatically prints a sentence
that has all of the attributes. Create an instance of Meal and then print the same sentence with
all of the attributes.

"""

class Meal:
    def __init__(self, food, drink, dessert):
        self.food = food
        self.drink = drink
        self.dessert = dessert

    def print_description(self):
        print(f"Enjoy your meal with {self.food}, a refreshing {self.drink}, and famous {self.dessert}!")

meal1 = Meal("Momo", "Coke", "Kurauni")
meal1.print_description()